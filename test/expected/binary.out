-- Test binary I/O functions
-- Note: recv functions cannot be called directly in SQL
-- We'll test them via casts instead
-- int1
SELECT encode(int1send((-128)::int1), 'hex');
 encode 
--------
 80
(1 row)

SELECT encode(int1send(0::int1), 'hex');
 encode 
--------
 00
(1 row)

SELECT encode(int1send(127::int1), 'hex');
 encode 
--------
 7f
(1 row)

-- uint1
SELECT encode(uint1send(0::uint1), 'hex');
 encode 
--------
 00
(1 row)

SELECT encode(uint1send(255::uint1), 'hex');
 encode 
--------
 ff
(1 row)

-- uint2
SELECT encode(uint2send(0::uint2), 'hex');
 encode 
--------
 0000
(1 row)

SELECT encode(uint2send(65535::uint2), 'hex');
 encode 
--------
 ffff
(1 row)

-- uint4
SELECT encode(uint4send(0::uint4), 'hex');
  encode  
----------
 00000000
(1 row)

SELECT encode(uint4send(4294967295::uint4), 'hex');
  encode  
----------
 ffffffff
(1 row)

-- uint8
SELECT encode(uint8send(0::uint8), 'hex');
      encode      
------------------
 0000000000000000
(1 row)

SELECT encode(uint8send(18446744073709551615::uint8), 'hex');
      encode      
------------------
 ffffffffffffffff
(1 row)

-- Test roundtrip via binary copy
CREATE TEMP TABLE test_binary (
    i1 int1,
    u1 uint1,
    u2 uint2,
    u4 uint4,
    u8 uint8
);
INSERT INTO test_binary VALUES (-128, 0, 0, 0, 0);
INSERT INTO test_binary VALUES (0, 128, 32768, 2147483648, 9223372036854775808);
INSERT INTO test_binary VALUES (127, 255, 65535, 4294967295, 18446744073709551615);
-- Binary copy out and back in to test send/recv functions
COPY test_binary TO '/tmp/test_binary.dat' WITH (FORMAT binary);
DELETE FROM test_binary;
COPY test_binary FROM '/tmp/test_binary.dat' WITH (FORMAT binary);
SELECT * FROM test_binary ORDER BY i1;
  i1  | u1  |  u2   |     u4     |          u8          
------+-----+-------+------------+----------------------
 -128 | 0   | 0     | 0          | 0
 0    | 128 | 32768 | 2147483648 | 9223372036854775808
 127  | 255 | 65535 | 4294967295 | 18446744073709551615
(3 rows)

